import java.util.Arrays;

public class LIS{
  // costanti ed esempi
  private static final int UNKNOWN=-1;
  private static final SList<Integer> NULL_LIST=new SList<Integer>();
  
  public static int llisSlow( int[] s ) { // s[i] > 0 per i in [0,n-1], dove n = s.length
    return llisSlowRec( s, 0, 0 );
  }
  
  private static int llisSlowRec( int[] s, int i, int t ) {
    final int n = s.length;
    if ( i == n ) {
      return 0;
    } else if ( s[i] <= t ) {
      return llisSlowRec( s, i+1, t );
    } else {
      return Math.max( 1+llisSlowRec(s,i+1,s[i]), llisSlowRec(s,i+1,t) );
    }
  } 
  
  public static void testSlow(){
    System.out.println(llisSlow( new int[] {5, 4, 3, 2, 1} )); 
    System.out.println(llisSlow( new int[] {47, 38, 39, 25, 44} ));
    System.out.println(llisSlow( new int[] {27, 90, 7, 29, 49, 8, 53, 1, 28, 6} )); 
    System.out.println(llisSlow( new int[] {9, 46, 54, 71, 60, 47, 0, 32, 25, 61} )); 
    System.out.println(llisSlow( new int[] {54, 52, 42, 33, 14, 40, 37, 61, 53, 1} )); 
    System.out.println(llisSlow(new int[] {1,76,4,453,2,34,56,8,7,43,2,34,67,32,743,67,76,4,453,2,34,56,8,7,43,2,34,67,432,845,65,76,7,45,267,4653,45,437,874,47,74,865,5,55,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,76,4,453,2,34,56,8,7,43,2,34,67,7,76,4576,76,4,7865,32,743,67,76,4,453,2,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,76,4,453,2,34,56,8,7,43,2,34,67,34,56,8,7,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,76,4,453,2,34,56,8,7,43,2,34,67,43,2,34,67,65,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,76,4,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,71}));
  }
  //////////////////////////////////////////////////////////////////
  // Parte 1
  
  private static int shiftIndex(int[] s, int i){
    int thr;
    if(i==0){
      thr=0;
    } else {
      thr=s[i-1];
    }
    return thr;
  }
  
  public static int llis( int[] s ) {
    int n=s.length;
    int h[][]= new int[n+1][n+1];
    for(int i=0;i<=n;i++){
      for(int j=0;j<=n;j++){
        h[i][j]=UNKNOWN;
      }
    }
    return llisRec( s, 0, 0, h);
  }
  
  
  private static int llisRec( int[] s, int i, int t, int[][] h ) {
    final int n = s.length;
    if(h[i][t]==UNKNOWN){
      if ( i == n ) {
        h[i][t] = 0;
      } else {
        if ( s[i] <= shiftIndex(s, t) ) {
          h[i][t] = llisRec( s, i+1, t, h );
        } else {
          h[i][t] = Math.max(1+llisRec(s,i+1,i+1,h),
                             llisRec(s,i+1,t,h) );
        }
      }
    }
    return h[i][t];
  } 
  
  public static void test(){
    System.out.println(llis( new int[] {5, 4, 3, 2, 1} )); 
    System.out.println(llis( new int[] {47, 38, 39, 25, 44} ));
    System.out.println(llis( new int[] {27, 90, 7, 29, 49, 8, 53, 1, 28, 6} )); 
    System.out.println(llis( new int[] {9, 46, 54, 71, 60, 47, 0, 32, 25, 61} )); 
    System.out.println(llis( new int[] {54, 52, 42, 33, 14, 40, 37, 61, 53, 1} )); 
    System.out.println(llis(new int[] {1,76,4,453,2,34,56,8,7,43,2,34,67,32,743,67,76,4,453,2,34,56,8,7,43,2,34,67,432,845,65,76,7,45,267,4653,45,437,874,47,74,865,5,55,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,76,4,453,2,34,56,8,7,43,2,34,67,7,76,4576,76,4,7865,32,743,67,76,4,453,2,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,76,4,453,2,34,56,8,7,43,2,34,67,34,56,8,7,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,76,4,453,2,34,56,8,7,43,2,34,67,43,2,34,67,65,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,76,4,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,71}));
  }
  
  //////// Bottom-Up

  public static int llisBU( int[] s ) {
    int n=s.length;
    int h[][]= new int[n+1][n+1];
    for(int t=0;t<=n;t++){
      h[n][t]=0;
    }
    
    for(int i=n-1;i>=0;i--){
      for(int t=i;t>=0;t--){
        if(s[i] <= shiftIndex(s, t)){
          h[i][t] = h[i+1][t];
        } else {
          h[i][t] = Math.max(1 + h[i+1][i+1],
                             h[i+1][t]);
        }
      }
    }
    return h[0][0];
  }
  
  public static void testBU(){
    System.out.println(llisBU( new int[] {5, 4, 3, 2, 1} )); 
    System.out.println(llisBU( new int[] {47, 38, 39, 25, 44} ));
    System.out.println(llisBU( new int[] {27, 90, 7, 29, 49, 8, 53, 1, 28, 6} )); 
    System.out.println(llisBU( new int[] {9, 46, 54, 71, 60, 47, 0, 32, 25, 61} )); 
    System.out.println(llisBU( new int[] {54, 52, 42, 33, 14, 40, 37, 61, 53, 1} )); 
    System.out.println(llisBU(new int[] {1,76,4,453,2,34,56,8,7,43,2,34,67,32,743,67,76,4,453,2,34,56,8,7,43,2,34,67,432,845,65,76,7,45,267,4653,45,437,874,47,74,865,5,55,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,76,4,453,2,34,56,8,7,43,2,34,67,7,76,4576,76,4,7865,32,743,67,76,4,453,2,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,76,4,453,2,34,56,8,7,43,2,34,67,34,56,8,7,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,76,4,453,2,34,56,8,7,43,2,34,67,43,2,34,67,65,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,76,4,874,47,74,865,5,55,7,76,4576,76,4,7865,32,743,67,71}));
  }
  
  
  /////////////////////////////////////////////////////////////////////
  // parte 2
  
  public static SList<Integer>{
    
  }
  
  /////////////////////////////////////////////////////////////////////
  // parte 3
  
  public static int[][] llisBU( int[] s ) {
    int n=s.length;
    int h[][]= new int[n+1][n+1];
    for(int t=0;t<=n;t++){
      h[n][t]=0;
    }
    
    for(int i=n-1;i>=0;i--){
      for(int t=i;t>=0;t--){
        if(s[i] <= shiftIndex(s, t)){
          h[i][t] = h[i+1][t];
        } else {
          h[i][t] = Math.max(1 + h[i+1][i+1],
                             h[i+1][t]);
        }
      }
    }
    return h;
  }
}