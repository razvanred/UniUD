
myMap snd (myFilt (f 0) (myZip (error "ERROR":"do") [(2,'a')..]))


myMap snd (myFilt (f 0) (myZip (: (error "ERROR") "do") (enumFrom@(2,'a'))))

case (myFilt (f 0) (myZip (: (error "ERROR") "do") (enumFrom@(Float,Char) (2,'a')))) of
        : x xs -> : (snd x) (myMap snd xs)
        [] -> []

case (case (myZip (: (error "ERROR") "do") (enumFrom@(Float,Char) (2,'a')))of
        [] -> []
        : x xs -> if (f 0 x) then (: x ys[myFilt (f 0) xs]) else ys
    ) of
        : x xs -> : (snd x) (myMap snd xs)
        [] -> []

case (case (case (: (error "ERROR") "do") of 
            [] -> case (enumFrom@(Float,Char) (2,'a')) of
                [] -> []
                : y ys -> []
                _ -> error "ouch !!"
            : x xs -> case (enumFrom@(Float,Char) (2,'a')) of
                [] -> []
                : y ys -> : (y, x) (myZip xs ys)
                _ -> error "ouch !!"
           ) of
        [] -> []
        : x xs -> if (f 0 x) then (: x ys[myFilt (f 0) xs]) else ys
     ) of
        : x xs -> : (snd x) (myMap snd xs)
        [] -> []

case (case (case (: (error "ERROR") "do") of 
            [] -> case (enumFrom@(Float,Char) (2,'a')) of
                [] -> []
                : y ys -> []
                _ -> error "ouch !!"
            : x xs -> case (enumFrom@(Float,Char) (2,'a')) of
                [] -> []
                : y ys -> : (y, x) (myZip xs ys)
                _ -> error "ouch !!"
           ) of
        [] -> []
        : x xs -> if (f 0 x) then (: x ys[myFilt (f 0) xs]) else ys
     ) of
        : x xs -> : (snd x) (myMap snd xs)
        [] -> []