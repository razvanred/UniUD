

enumFrom@(Float,Char) = \ z -> case z of
    (x, c) -> : a[(*@Float x 1.1@Float , succ@Char c)] (enumFrom@(Float,Char) a)

       
f :: Float -> ( any , ( Float , Char )) -> Bool
f = \ x -> \ y' -> case y' of
    (_ , y'') -> case y'' of
        ( y , _ ) -> <@Float x y

myMap = \ f -> \ l -> case l of
    : x xs -> : (f x) (myMap f xs)
    [] -> []

myFilt = \ p -> \ l -> case l of
    [] -> []
    : x xs -> if (p x) then (: x ys[myFilt p xs]) else ys

myZip = \ l1 -> \ l2 -> case l1 of
    [] -> []
    : x xs -> case l2 of
        [] -> []
        : y ys -> : (x,y) (myZip xs ys)
        _ -> error "ouch !!"
    _ -> error "ouch !!"